{"version":3,"file":"component---src-templates-post-template-js-0ee7aed4d0094e069dea.js","mappings":"kKA0BA,IAfaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,OACEE,EAAAA,cAAA,WACGD,GACCA,EAAKE,KAAKC,IACR,OACEF,EAAAA,cAACG,EAAG,CAACC,IAAKF,GACRF,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAK,SAdJC,EAcwBL,EAbpCK,EACJC,MAAM,sEACNP,KAAKQ,GAAMA,EAAEC,gBACbC,KAAK,QAU4CT,IAdjCK,KAeH,IAGR,EAMV,MAAMJ,EAAMS,EAAAA,QAAOC,KAAIC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAXJ,CAAW,ojB,mFCoBvB,UA1CqBd,IAAe,IAAd,KAAEmB,GAAMnB,EAC5B,MAAM,YAAEoB,EAAW,QAAEC,EAAO,KAAEC,GAASH,EAAKI,eACtCC,EAAOL,EAAKK,KACZC,EAAON,EAAKM,KAElB,OACEvB,EAAAA,cAACwB,EAAAA,EAAM,CACLC,MAAOP,EAAYO,MACnBC,YAAaR,EAAYQ,aAAeP,EACxCQ,YACET,EAAYU,aAAeV,EAAYU,aAAaC,aAAe,IAGrE7B,EAAAA,cAAC8B,EAAW,KACV9B,EAAAA,cAAA,eACEA,EAAAA,cAAC+B,EAAS,KAAEb,EAAYO,OACxBzB,EAAAA,cAACgC,EAAQ,KAAEd,EAAYe,MAEvBjC,EAAAA,cAACkC,EAAW,CAACC,wBAAyB,CAAEC,OAAQhB,MAGlDpB,EAAAA,cAACqC,EAAc,KACZf,GACCtB,EAAAA,cAAA,WACEA,EAAAA,cAAA,YAAM,YACNA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAIgB,EAAKgB,OAAOC,MAAM,IAAEjB,EAAKJ,YAAYO,QAIlDF,GACCvB,EAAAA,cAAA,WACEA,EAAAA,cAAA,YAAM,QACNA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAIiB,EAAKe,OAAOC,MAAM,IAAEhB,EAAKL,YAAYO,SAIrDzB,EAAAA,cAACwC,EAAAA,EAAI,CAACzC,KAAMmB,EAAYnB,QAEnB,EAMb,MAAM+B,EAAclB,EAAAA,QAAO6B,IAAG3B,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,wIASxBmB,EAAYnB,EAAAA,QAAO8B,GAAE5B,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAATJ,CAAS,gCAIrBoB,EAAWpB,EAAAA,QAAOC,KAAIC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAXJ,CAAW,yFAOtBsB,EAActB,EAAAA,QAAO+B,QAAO7B,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAdJ,CAAc,8jBA2D5ByB,EAAiBzB,EAAAA,QAAOgC,IAAG9B,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVJ,CAAU,yoB","sources":["webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/post-template.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  body.light-mode & a {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.7);\n  }\n\n  body.light-mode & a:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n\n  body.dark-mode & a {\n    background-color: #212122;\n    border: 1px solid #1a1a1b;\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\nimport Tags from \"../components/tags\";\n\nconst PostTemplate = ({ data }) => {\n  const { frontmatter, excerpt, html } = data.markdownRemark;\n  const prev = data.prev;\n  const next = data.next;\n\n  return (\n    <Layout\n      title={frontmatter.title}\n      description={frontmatter.description || excerpt}\n      socialImage={\n        frontmatter.social_image ? frontmatter.social_image.absolutePath : \"\"\n      }\n    >\n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>{frontmatter.date}</PostDate>\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n\n        <PostPagination>\n          {prev && (\n            <div>\n              <span>previous</span>\n              <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\n            </div>\n          )}\n\n          {next && (\n            <div>\n              <span>next</span>\n              <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\n            </div>\n          )}\n        </PostPagination>\n        <Tags tags={frontmatter.tags} />\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  display: block;\n  margin-top: 0.5rem;\n  text-transform: uppercase;\n`;\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: \"Source Sans Pro\", monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nconst PostPagination = styled.nav`\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin-top: var(--size-900);\n\n  & > * {\n    position: relative;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    margin-bottom: 1rem;\n  }\n\n  & > *:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  & span {\n    text-transform: uppercase;\n    opacity: 0.6;\n    font-size: var(--size-400);\n    padding-bottom: var(--size-500);\n  }\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n    font-size: var(--size-400);\n    text-transform: capitalize;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        social_image {\n          absolutePath\n        }\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["_ref","tags","React","map","tag","Tag","key","Link","to","str","match","x","toLowerCase","join","styled","span","withConfig","displayName","componentId","data","frontmatter","excerpt","html","markdownRemark","prev","next","Layout","title","description","socialImage","social_image","absolutePath","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","PostPagination","fields","slug","Tags","div","h1","section","nav"],"sourceRoot":""}